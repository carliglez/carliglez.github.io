/* style.css */

/* Styles for the body */
body {
  font-family: Arial, sans-serif;
  text-align: center;
  background-color: #222;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  min-height: 100vh; /* Allows the body to occupy the full height of the screen */
  overflow-y: auto; /* Allows scrolling at page level */
}

/* Title */
h1 {
  color: #fff;
  margin-top: 20px;
}

/* Game image */
img {
  margin-top: 20px; /* Ensures that the image is separated from the title */
  max-width: 100%; /* Makes the image fit the screen size */
  height: auto; /* Maintains aspect ratio */
}

/* Controls (Number of cards, button and difficulty selector) */
#controls {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  margin-top: 30px;
  width: 100%; /* The width of the control container */
  max-width: 600px; /* Limits the overall width to keep it consistent */
}

/* Row of controls */
.control-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 10px; /* Space between elements */
  width: 90%; /* The rows occupy the full width of the container */
}

/* Style for labels */
label {
  font-size: 16px;
  color: #fff;
  flex: 1; /* The labels will occupy the same proportional space */
  text-align: left;
}

/* Input fields and buttons */
input, button, select {
  padding: 8px;
  font-size: 16px;
  border-radius: 5px;
  border: 1px solid #ccc;
  flex: 2; /* The fields and the button will share the same proportion of space */
  max-width: 70%; /* Optional: ensures that maximum width is not exceeded */
}

/* Button settings */
button {
  flex: 1.5; /* Slightly adjust the button to make it proportional */
  text-align: center;
}

/* Game board */
#game-board {
  display: grid;
  grid-template-columns: repeat(4, 1fr); /* 4 columns */
  gap: 10px;
  width: 80%;
  max-width: 800px; /* Limits the maximum width */
  margin-top: 40px; /* Upper space */
  margin-bottom: 40px; /* Lower space */
  justify-content: center; /* Centers the entire grid horizontally */
}

/* Basic styles for cards */
.card {
  margin: auto; /* This setting ensures that the card is horizontally centered */
  width: 100px;
  height: 100px;
  background-color: #ccc;
  border-radius: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 20px;
  color: #fff;
  cursor: pointer;

  /* Animation configuration */
  position: relative;
  perspective: 1000px;
  transform-style: preserve-3d;
  transition: transform 0.5s;
}

/* Pseudoelement ::before (front face) */
.card::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: #ccc;
  border-radius: 10px;
  backface-visibility: hidden; /* Hides the reverse side when flipped */
}

/* Pseudoelement ::after (back face) */
.card::after {
  content: attr(data-card-value); /* Show the value of the card */
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: #007bff;
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 20px;
  backface-visibility: hidden; /* Ensures that the back of the card is hidden when not flipped over */
  border-radius: 10px;
  transform: rotateY(180deg); /* Reverse side initially hidden */
}

/* When the card is flipped over */
.card.flipped {
  transform: rotateY(180deg); /* Flip the card */
}